/* using box-sizing will ensure your content stays a certain size even after you add the padding, borders etc. otherwise when you
add the border, padding etc, it will make it wider/higher than the given width/height you put in your css for that element. */

html {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

#container {
    width: 90%; /* only use 90% of your container */
    margin: 2em auto; /* makes things more centered bc the top/bottom are 2em and the sides are auto which means it will adjust
    automatically */
    /* font: 3em/1.2 Arial, Helvetica, sans-serif; moved down to the #container > div, button { }. if it stays at this line, then 
    the font won't show up for buttons. */
    display: grid; /* won't show as grid until you add info about columns/rows */
    grid-template-columns: repeat(4, minmax(200px, 1fr)); /* 4 columns. the min is 200 and the max is 1fr which means 1 fraction
    of the available space left in the grid. The fr unit distributes space proportionally. */
    grid-auto-rows: minmax(100px, auto); /* min is 100 and the max is auto which means which it expands to accommodate more 
    content. I think this means more rows can show as more elements are added but notice the columns has a number 4 which 
    means it will never go beyond 4 columns and if there is an extra element that would have been in a 5th column, it gets sent to 
    the next row which would be column 1 of the next row? */
    gap: 20px;

}

#display {
    grid-column: 1/5; /* makes the display take up the entire first row */
    grid-row: 1;
}

#clear {
    grid-column: 1/3; /* makes the clear button take up half a row */
    grid-row: 6;
}

#equals {
    grid-column: 3/5; /* makes the equals button take up half a row */
    grid-row: 6;
}

#container > div, button {
    border-radius: 5px;
    border: 2px solid rgb(79,185,227);
    padding: 10px;
    background-color: rgb(207,232,220);
    font: 2em/1.2 Arial, Helvetica, sans-serif;
}